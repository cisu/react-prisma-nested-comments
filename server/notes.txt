1. cd server
2. initialize npm 
    npm init -y
3. install dev dependencies
    npm i --save-dev prisma nodemon
4. create a folder server.js 
    touch server.js
5. install prisma
    npm i @prisma/client
6. initialize prisma 
    npm prisma init
7. in prisma/schema.prisma 
this is where all of our information for our models of our database are going to go
and .env is going to have our url for our server

7.1 in .end file 
DATABASE_URL="postgresql://postgres:AsdF1234!@localhost:5433/comments"

"postgresql:// (is defautl) 
postgres (is root db)
AsdF1234! (is root password)
@localhost:5433(is where database is running)
comments (is the name of the database)"

8.  onDelete: Cascade
any time that we delete the thing that this points to which is our user delete all the comments that user had as well.

9. when schema is complete run 

  npx prisma migrate dev
  
run this command in every change in the schema.prisma

10. to hook this up with prisma to automatically run prisma/seed.js file
we need to add essentially one section in package.json
 "prisma": {
    "seed": "node prisma/seed.js"
  }

10.1 add in package.json type module to support import export
"type": "module"

10.2 and then run 
    npx prisma db seed  

to seed data we import

// in order to run our server we need to download certain libraries, run
// fastify is like express
// dotenv allow us to pull in environment variables into our project
// @fastify/cookie for cookies user authentication
// @fastify/cors this allow us to communicate between the server and the client
// @fastify/sensible send erros to the users
    npm i fastify dotenv @fastify/cookie @fastify/cors @fastify/sensible




/******************************************************  How to add server  *********************************************************/



// import fastify and dotenva and  PrismaClient
// fastify from server 
// dotenv from have accest to env variables
import fastify from 'fastify';
import dotenv 
import {PrismaClient} from '@prisma/client';


// execute dotenv config to have access to env variables
dotenv.config();

// and initialize fastify and PrismaClient and sensible
const app = fastify();
app.register(sensible);
const prisma = new PrismaClient();

// send a get request to '/post' and return id, title for each post
app.get('/posts', async (req, res) => {
  return await prisma.post.findMany({
    select: {
      id: true,
      title: true,
    },
  });
});


// listen to a port 
app.listen({port: process.env.PORT});

